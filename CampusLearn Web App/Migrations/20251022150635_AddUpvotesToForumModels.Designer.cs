// <auto-generated />
using System;
using CampusLearn_Web_App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CampusLearn_Web_App.Migrations
{
    [DbContext(typeof(CampusLearnDbContext))]
    [Migration("20251022150635_AddUpvotesToForumModels")]
    partial class AddUpvotesToForumModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CampusLearn_Web_App.Models.ForumComment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("commentid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommentID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Downvotes")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentCommentID")
                        .HasColumnType("integer");

                    b.Property<int>("PostID")
                        .HasColumnType("integer");

                    b.Property<int>("Upvotes")
                        .HasColumnType("integer");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("CommentID");

                    b.HasIndex("ParentCommentID");

                    b.HasIndex("PostID");

                    b.HasIndex("UserID");

                    b.ToTable("forumcomment", (string)null);
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.ForumPost", b =>
                {
                    b.Property<int>("PostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("postid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PostID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Downvotes")
                        .HasColumnType("integer");

                    b.Property<int?>("StudentModuleID")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("Upvotes")
                        .HasColumnType("integer");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("PostID");

                    b.HasIndex("StudentModuleID");

                    b.HasIndex("UserID");

                    b.ToTable("forumpost", (string)null);
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.LearningMaterial", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("materialid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaterialID"));

                    b.Property<string>("FileName")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("filename");

                    b.Property<string>("FileType")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("filetype");

                    b.Property<int>("TopicID")
                        .HasColumnType("integer")
                        .HasColumnName("topicid");

                    b.Property<DateTime?>("UploadDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("uploaddate");

                    b.HasKey("MaterialID");

                    b.HasIndex("TopicID");

                    b.ToTable("LearningMaterial", (string)null);
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("messageid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MessageID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<int>("ReceiverID")
                        .HasColumnType("integer")
                        .HasColumnName("receiverid");

                    b.Property<int>("SenderID")
                        .HasColumnType("integer")
                        .HasColumnName("senderid");

                    b.Property<DateTime>("SentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("sentdate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("MessageID");

                    b.HasIndex("ReceiverID");

                    b.HasIndex("SenderID");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.Module", b =>
                {
                    b.Property<int>("ModuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("moduleid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ModuleID"));

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("modulecode");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modulename");

                    b.HasKey("ModuleID");

                    b.HasIndex("ModuleCode")
                        .IsUnique();

                    b.ToTable("module", (string)null);
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.Notification", b =>
                {
                    b.Property<int>("NotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("notificationid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NotificationID"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("message");

                    b.Property<int>("UserID")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasKey("NotificationID");

                    b.HasIndex("UserID");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.StudentModule", b =>
                {
                    b.Property<int>("StudentModuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("studentmoduleid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StudentModuleID"));

                    b.Property<int>("ModuleID")
                        .HasColumnType("integer")
                        .HasColumnName("moduleid");

                    b.Property<int>("UserID")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasKey("StudentModuleID");

                    b.HasIndex("ModuleID");

                    b.HasIndex("UserID");

                    b.ToTable("studentmodule", (string)null);
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.Topic", b =>
                {
                    b.Property<int>("TopicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("topicid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TopicID"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationdate");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("ModuleID")
                        .HasColumnType("integer")
                        .HasColumnName("moduleid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("title");

                    b.Property<int>("UserID")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasKey("TopicID");

                    b.HasIndex("ModuleID");

                    b.HasIndex("UserID");

                    b.ToTable("Topic", (string)null);
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.TutorModule", b =>
                {
                    b.Property<int>("TutorModuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tutormoduleid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TutorModuleID"));

                    b.Property<int>("ModuleID")
                        .HasColumnType("integer")
                        .HasColumnName("moduleid");

                    b.Property<int>("UserID")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasKey("TutorModuleID");

                    b.HasIndex("ModuleID");

                    b.HasIndex("UserID");

                    b.ToTable("tutormodule", (string)null);
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("firstname");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("lastname");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("passwordhash");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("role");

                    b.HasKey("UserID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.ForumComment", b =>
                {
                    b.HasOne("CampusLearn_Web_App.Models.ForumComment", "ParentComment")
                        .WithMany("Replies")
                        .HasForeignKey("ParentCommentID");

                    b.HasOne("CampusLearn_Web_App.Models.ForumPost", "ForumPost")
                        .WithMany("Comments")
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampusLearn_Web_App.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ForumPost");

                    b.Navigation("ParentComment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.ForumPost", b =>
                {
                    b.HasOne("CampusLearn_Web_App.Models.StudentModule", "StudentModule")
                        .WithMany()
                        .HasForeignKey("StudentModuleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CampusLearn_Web_App.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StudentModule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.LearningMaterial", b =>
                {
                    b.HasOne("CampusLearn_Web_App.Models.Topic", "Topic")
                        .WithMany("LearningMaterials")
                        .HasForeignKey("TopicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.Message", b =>
                {
                    b.HasOne("CampusLearn_Web_App.Models.User", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampusLearn_Web_App.Models.User", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.Notification", b =>
                {
                    b.HasOne("CampusLearn_Web_App.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.StudentModule", b =>
                {
                    b.HasOne("CampusLearn_Web_App.Models.Module", "Module")
                        .WithMany("StudentModules")
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampusLearn_Web_App.Models.User", "User")
                        .WithMany("StudentModules")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.Topic", b =>
                {
                    b.HasOne("CampusLearn_Web_App.Models.Module", "Module")
                        .WithMany("Topics")
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampusLearn_Web_App.Models.User", "User")
                        .WithMany("Topics")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.TutorModule", b =>
                {
                    b.HasOne("CampusLearn_Web_App.Models.Module", "Module")
                        .WithMany("TutorModules")
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampusLearn_Web_App.Models.User", "User")
                        .WithMany("TutorModules")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.ForumComment", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.ForumPost", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.Module", b =>
                {
                    b.Navigation("StudentModules");

                    b.Navigation("Topics");

                    b.Navigation("TutorModules");
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.Topic", b =>
                {
                    b.Navigation("LearningMaterials");
                });

            modelBuilder.Entity("CampusLearn_Web_App.Models.User", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");

                    b.Navigation("StudentModules");

                    b.Navigation("Topics");

                    b.Navigation("TutorModules");
                });
#pragma warning restore 612, 618
        }
    }
}
